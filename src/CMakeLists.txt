cmake_minimum_required(VERSION 3.20)

set(LIBRARY_PROJECT_NAME "nlshade")

set(LIBRARY_COMPONENT_NAME "nlshade")
set(LIBRARY_COMPONENT_TARGETS "${LIBRARY_COMPONENT_NAME}_Targets")

project(${LIBRARY_PROJECT_NAME})

file(GLOB_RECURSE PUBLIC_HEADERS CONFIGURE_DEPENDS ${GLOBAL_HEADERS}/*.h ${GLOBAL_HEADERS}/**/*.h ${GLOBAL_HEADERS}/*.hpp ${GLOBAL_HEADERS}/**/*.hpp)

file(GLOB_RECURSE LIB_SOURCES CONFIGURE_DEPENDS ${SOURCE_DIR}/*.cpp ${SOURCE_DIR}/**/*.cpp)
file(GLOB_RECURSE LIB_HEADERS ${SOURCE_DIR}/**/*.h ${SOURCE_DIR}/**/*.hpp)

include_directories(${GLOBAL_HEADERS} ${SOURCE_DIR})

add_library(${LIBRARY_PROJECT_NAME} "SHARED" ${LIB_SOURCES} ${LIB_HEADERS})

target_include_directories(${LIBRARY_PROJECT_NAME} PRIVATE ${GLOBAL_HEADERS})
set_target_properties(${LIBRARY_PROJECT_NAME} PROPERTIES PUBLIC_HEADER "${PUBLIC_HEADERS}" LINKER_LANGUAGE CXX)
target_link_libraries(${LIBRARY_PROJECT_NAME} fmt::fmt)


install(TARGETS ${LIBRARY_PROJECT_NAME} 
    EXPORT ${LIBRARY_COMPONENT_TARGETS}
    COMPONENT ${LIBRARY_COMPONENT_NAME}
    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}/nlshade/${LIBRARY_COMPONENT_NAME}
    COMPONENT ${LIBRARY_COMPONENT_NAME}
    PUBLIC_HEADER DESTINATION ${TARGET_HEADERS_LOCATION}
    COMPONENT ${LIBRARY_COMPONENT_NAME}
    INCLUDES DESTINATION $<$<BOOL:${PUBLIC_HEADERS}>:${TARGET_HEADERS_LOCATION}>
  )

set(CONFIG_CMAKE_FILE_LOCATION ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${LIBRARY_COMPONENT_NAME}-config.cmake)
configure_file(
    ${ROOT_DIR}/cmake/config/nlshade-config.cmake.in 
    ${CONFIG_CMAKE_FILE_LOCATION}
)
install(FILES ${CONFIG_CMAKE_FILE_LOCATION} DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${LIBRARY_COMPONENT_NAME})

install(FILES ${CONFIG_CMAKE_FILE_LOCATION}
  DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${LIBRARY_COMPONENT_NAME}
  COMPONENT ${LIBRARY_COMPONENT_NAME}
)

install(EXPORT ${LIBRARY_COMPONENT_TARGETS} 
  FILE ${LIBRARY_COMPONENT_TARGETS}.cmake 
  COMPONENT ${LIBRARY_COMPONENT_NAME}
  NAMESPACE nlshade:: 
  DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${LIBRARY_COMPONENT_NAME}
)


